# This will build the application, send it to the container registry and SSH into the server to deploy it

name: Trim API Continuous Delivery

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_USER: ${{ secrets.SERVER_SSH_USER }}
      SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
      SSH_HOST: ${{ secrets.SERVER_SSH_HOST }}

    steps:
      - name: Checkout the branch/latest commit
        uses: actions/checkout@v3

      - name: Builds the application into an image
        id: build
        run: |
          curl -X POST https://notify.olamileke.me \
            -H 'Authorization: Bearer ${{ secrets.NOTIFY_BEARER_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{"service":"Trim API", "step":"BUILD_START"}' 
          docker build -t ${{ secrets.DOCKERHUB_REPO }} .
      - name: Send out notification if application build is successful
        if: ${{ steps.build.conclusion == 'success' }}
        run: |
          curl -X POST https://notify.olamileke.me \
            -H 'Authorization: Bearer ${{ secrets.NOTIFY_BEARER_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{"service":"Trim API", "step":"BUILD_COMPLETED"}'
      - name: Login to the Dockerhub Container Registry
        if: ${{ success() }}
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push the image to the Container Registry
        if: ${{ success() }}
        id: push
        run: docker push ${{ secrets.DOCKERHUB_REPO }}

      - name: Send out notification if Container Registry push is successful
        if: ${{ steps.push.conclusion == 'success' }}
        run: |
          curl -X POST https://notify.olamileke.me \
            -H 'Authorization: Bearer ${{ secrets.NOTIFY_BEARER_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{"service":"Trim API", "step":"IMAGE_PUSHED"}'
      - name: Configure SSH
        if: ${{ success() }}
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/server_ssh.key
          chmod 600 ~/.ssh/server_ssh.key
          cat >>~/.ssh/config <<END
          Host ym-docker
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/server_ssh.key
            StrictHostKeyChecking no
          END
      - name: Deploy Application
        id: deploy
        run: ssh ym-docker 'cd /home/Olamileke/ym-docker && ./deploy.sh ${{ secrets.DOCKERHUB_REPO }}'

      - name: Send out notification if deploy is successful
        if: ${{ steps.deploy.conclusion == 'success' }}
        run: |
          curl -X POST https://notify.olamileke.me \
            -H 'Authorization: Bearer ${{ secrets.NOTIFY_BEARER_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{"service":"Trim API", "step":"DEPLOYED"}'
      - name: Send out notification if pipeline fails
        if: ${{ failure() }}
        run: |
          curl -X POST https://notify.olamileke.me \
            -H 'Authorization: Bearer ${{ secrets.NOTIFY_BEARER_TOKEN }}' \
            -H 'Content-Type: application/json' \
            -d '{"service":"Trim API", "step":"FAILED"}'
